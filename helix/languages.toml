# https://docs.helix-editor.com/languages.html
# https://github.com/helix-editor/helix/blob/master/languages.toml
# https://github.com/helix-editor/helix/wiki/Language-Server-Configurations

[language-server.bash-language-server]
command = "bash-language-server"
args    = ["start"]

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.pylyzer]
command = "pylyzer"
args    = ["--server"]

[language-server.ruff]
command     = "ruff"
args        = ["server", "-q", "--preview"]
environment = { "RUFF_TRACE" = "messages" }

[language-server.ruff.config.settings]
format.preview = true
lint.preview   = true
logLevel       = "debug"
run            = "onSave"

[language-server.basedpyright]
command = "basedpyright-langserver"
args    = ["--stdio"]

[language-server.taplo]
command = "taplo"
args    = ["lsp", "stdio"]

[language-server.yaml-language-server]
command = "yaml-language-server"
args    = ["--stdio"]

[language-server.basedpyright.config]
basedpyright.analysis.diagnosticMode   = "openFilesOnly"
basedpyright.analysis.typeCheckingMode = "recommended"

[language-server.basedpyright.config.basedpyright.analysis.diagnosticSeverityOverrides]
reportAny                         = "none"
reportConstantRedefinition        = "none"
reportExplicitAny                 = "none"
reportImplicitOverride            = "none"
reportImplicitStringConcatenation = "none"
reportInvalidCast                 = "none"
reportMissingSuperCall            = "none"
reportMissingTypeStubs            = "none"
reportPrivateUsage                = "none"
reportUnknownArgumentType         = "none"
reportUnknownLambdaType           = "none"
reportUnknownMemberType           = "none"
reportUnknownVariableType         = "none"
reportUnusedCallResult            = "none"

[language-server.pylsp]
command = "pylsp"

[language-server.pylsp.config.pylsp]
plugins.black.enabled           = false
plugins.isort.enabled           = true
plugins.pyflakes.enabled        = true
plugins.pylint.enabled          = true
plugins.pyls_mypy.enabled       = false
plugins.pyls_mypy.live_mode     = false
plugins.pylsp_mypy.dmypy        = false
plugins.rope_autoimport.enabled = false
plugins.ruff.enabled            = true
plugins.ruff.formatEnabled      = true
plugins.ruff.preview            = true

[language-server.sql-language-server]
command = "sql-language-server"
args    = ["up", "--method", "stdio"]

[language-server.lua-language-server]
command = "lua-language-server"

[language-server.codebook]
command = "codebook-lsp"
args    = ["serve"]

[language-server.tailwindcss-ls]
command = "tailwindcss-language-server"
args    = ["--stdio"]

[language-server.typescript-language-server]
command         = "typescript-language-server"
args            = ["--stdio"]
config.hostInfo = "helix"

[[language]]
name              = "python"
auto-format       = true
shebangs          = ["python", "uv"]
language-servers  = ["ruff", "basedpyright"]         # "pylsp", "pylyzer"
indent            = { tab-width = 4, unit = "    " }
formatter.command = "ruff"
formatter.args    = ["format", "-"]

[[language]]
name                          = "rust"
shebangs                      = ["rust-script", "cargo"]
auto-format                   = true
language-servers              = ["rust-analyzer"]
indent                        = { tab-width = 4, unit = "    " }
persistent-diagnostic-sources = ["rustc", "clippy"]
formatter.command             = "rustfmt"

[[language]]
name              = "xit"
auto-format       = true
indent            = { tab-width = 4, unit = "    " }
formatter.command = "bash"
formatter.args    = ["-c", "xit-sort -"]             # custom script in ~/bin/

[[language]]
name              = "csv"
file-types        = ["csv"]
scope             = "source.csv"
formatter.command = "bash"
formatter.args    = ["-c", "column -t -s, -o, <&0"]

[[language]]
name              = "markdown"
soft-wrap.enable  = true
text-width        = 200
auto-format       = true
formatter.command = "prettier"
formatter.args    = ["--parser=markdown"]
language-servers  = ["codebook"]

# Following language is to provide auto-formatting for mermaid gantt charts.
# File types is intentionally left blank, so files with  `.mermaid` or `.mmd`
# exts will still default to the mermaid lang.
# Run the command `:lang gantt` to enable auto formatting.
# Repo for formatter: https://github.com/ayvi-0001/mermaid-gantt-formatter
[[language]]
name              = "gantt"
scope             = "source.mermaid"
injection-regex   = "mermaid"
file-types        = []
auto-format       = true
comment-token     = "%%"
formatter.command = "fmt-mmd-gantt"
formatter.args    = ["-i-"]
grammar           = "mermaid"

[[language]]
name              = "sql"
file-types        = ["sql", "dsql", "sqlx"]
indent            = { tab-width = 2, unit = "  " }
auto-format       = false
language-servers  = ["sql-language-server"]
formatter.command = "sqlfluff"
formatter.args    = ["format", "-"]

[[language]]
name              = "toml"
indent            = { tab-width = 2, unit = "  " }
auto-format       = true
formatter.command = "taplo"
formatter.args    = ["format", "-"]
language-servers  = ["taplo"]

[[language]]
name              = "lua"
shebangs          = ["lua", "luajit"]
indent            = { tab-width = 2, unit = "  " }
language-servers  = ["lua-language-server"]
auto-format       = true
formatter.command = "stylua"
formatter.args    = ["--search-parent-directories", "-"]

# echo '; inherits: git-ignore' > "$HELIX_RUNTIME/queries/filter/highlights.scm"
[[language]]
name            = "filter"
scope           = "source.filter"
injection-regex = "filter"
file-types      = [{ glob = "*.*filter" }]
comment-token   = "#"
grammar         = "gitignore"

[[language]]
name              = "yaml"
auto-format       = true
formatter.command = "yamlfmt"
formatter.args    = ["-"]

[[language]]
name              = "javascript"
auto-format       = true
formatter.command = "prettier"
formatter.args    = ["--parser=typescript"]

[[language]]
name              = "typescript"
auto-format       = true
formatter.command = "prettier"
formatter.args    = ["--parser=typescript"]

[[language]]
name              = "jsx"
auto-format       = true
formatter.command = "prettier"
formatter.args    = ["--parser=typescript"]
language-servers  = ["typescript-language-server", "tailwindcss-ls"]

[[language]]
name              = "tsx"
auto-format       = true
formatter.command = "prettier"
formatter.args    = ["--parser=typescript"]
language-servers  = ["typescript-language-server", "tailwindcss-ls"]

[[language]]
name             = "html"
language-servers = ["vscode-html-language-server", "tailwindcss-ls"]

[[language]]
name             = "css"
file-types       = ["css", "scss", "tcss"]
language-servers = ["vscode-css-language-server", "tailwindcss-ls"]

[[grammar]]
name       = "rust"
source.git = "https://github.com/tree-sitter/tree-sitter-rust"
source.rev = "3691201b01cacb2f96ffca4c632c4e938bfacd88"

[[grammar]]
name       = "xit"
source.git = "https://github.com/synaptiko/tree-sitter-xit"
source.rev = "a4fad351bfa5efdcb379b40c36671413fbe9caac"

[[grammar]]
name       = "bash"
source.git = "https://github.com/tree-sitter/tree-sitter-bash"
source.rev = "487734f87fd87118028a65a4599352fa99c9cde8"

[[grammar]]
name           = "markdown"
source.git     = "https://github.com/tree-sitter-grammars/tree-sitter-markdown"
source.rev     = "192407ab5a24bfc24f13332979b5e7967518754a"
source.subpath = "tree-sitter-markdown"

[[grammar]]
name           = "markdown_inline"
source.git     = "https://github.com/tree-sitter-grammars/tree-sitter-markdown"
source.rev     = "192407ab5a24bfc24f13332979b5e7967518754a"
source.subpath = "tree-sitter-markdown-inline"

[[grammar]]
name       = "mermaid"
source.git = "https://github.com/monaqa/tree-sitter-mermaid"
source.rev = "90ae195b31933ceb9d079abfa8a3ad0a36fee4cc"

[[grammar]]
name       = "sql"
source.git = "https://github.com/DerekStride/tree-sitter-sql"
source.rev = "b0bf4ffab7bec3a97bab31833e50b5671206d40c"

[[grammar]]
name       = "lua"
source.git = "https://github.com/tree-sitter-grammars/tree-sitter-lua"
source.rev = "db16e76558122e834ee214c8dc755b4a3edc82a9"
