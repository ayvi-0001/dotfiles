theme = "ayu_evolve"

[editor]
bufferline               = "always"
clipboard-provider       = "windows"
color-modes              = true
completion-timeout       = 10
cursorline               = true
default-line-ending      = "lf"
end-of-line-diagnostics  = "hint"
insert-final-newline     = true
middle-click-paste       = true
mouse                    = true
popup-border             = "all"
rulers                   = [88, 100, 120]
scroll-lines             = 4
search.smart-case        = true
search.wrap-around       = false
shell                    = ["bash", "-c"]
smart-tab.supersede-menu = false
text-width               = 200
true-color               = true
undercurl                = true
editor-config            = true

  [editor.terminal]
  command = "bash"
  args    = ["-c"]

  [editor.auto-save]
  focus-lost          = true
  after-delay.enable  = false
  after-delay.timeout = 5000

  [editor.whitespace.characters]
  nbsp    = "⍽"
  newline = "⏎"
  nnbsp   = "␣"
  space   = "·"
  tab     = "→"
  tabpad  = "·" # Tabs will look like "→···" (depending on tab width)

  [editor.inline-diagnostics]
  cursor-line     = "hint"
  other-lines     = "disable"
  prefix-len      = 1
  max-wrap        = 20
  max-diagnostics = 10

  [editor.lsp]
  enable                             = true
  display-messages                   = true
  display-progress-messages          = false
  auto-signature-help                = true
  display-inlay-hints                = true
  display-signature-help-docs        = true
  snippets                           = true
  goto-reference-include-declaration = true

  [editor.indent-guides]
  render      = true
  character   = "╎"
  skip-levels = 0

  [editor.statusline]
  left = ["mode", "spinner", "file-name", "read-only-indicator", "file-modification-indicator", "version-control"]
  separator = "│"
  right = [
    "file-encoding",
    "file-line-ending",
    "total-line-numbers",
    "file-type",
    "separator",
    "spacer",
    "diagnostics",
    "selections",
    "primary-selection-length",
    "register",
    "position",
    "position-percentage",
    "file-encoding",
  ]

  [editor.file-picker]
  git-exclude = false
  git-global  = false
  git-ignore  = false
  hidden      = false
  ignore      = false

[keys.normal]
# open yazi
C-y = [
  ':sh rm -f /tmp/unique-file',
  ':insert-output YAZI_CONFIG_HOME=$HOME/.config/yazi yazi --chooser-file=/tmp/unique-file',
  ':open %sh{cat /tmp/unique-file}',
  ':redraw',
  ':set mouse false',
  ':set mouse true',
]

# git blame
G.b = "@:sh git blame -L %{cursor_line},+1 %{buffer_name}<ret>"

q     = ":q"
Q     = ":bc"
C-S-q = ":bc!"
C-q   = ":q!"
C-r   = ":rla"
S-A-f = ":fmt"
ret   = ["open_below", "normal_mode"]
f     = ["find_next_char", "normal_mode"]
C-j   = ["goto_next_paragraph"]
C-k   = ["goto_prev_paragraph"]
esc   = ["collapse_selection", "keep_primary_selection"]
H     = ["goto_previous_buffer"]
L     = ["goto_next_buffer"]

C-o   = "no_op"
C-i   = "no_op"
C-s   = "no_op"
C-O   = "jump_backward"
C-I   = "jump_forward"
C-S-s = "save_selection"

# move line up
S-A-k = [
  "keep_primary_selection",
  "extend_to_line_bounds",
  "extend_line_above",
  "split_selection_on_newline",
  "select_mode",
  "goto_line_end_newline",
  "normal_mode",
  "rotate_selection_contents_forward",
  "keep_primary_selection",
  "move_visual_line_up",
]
# move line down
S-A-j = [
  "keep_primary_selection",
  "move_line_down",
  "extend_to_line_bounds",
  "extend_line_above",
  "split_selection_on_newline",
  "select_mode",
  "goto_line_end_newline",
  "normal_mode",
  "rotate_selection_contents_forward",
  "keep_primary_selection",
  "move_visual_line_down",
  "move_visual_line_up",
]

  [keys.normal.g] # Goto ext
  D = "@gd wv"                         # Goto definition in new vertical right split
  R = "@<space>wv<space>whga<space>wl" # Move current buffer to new vertical right split, Goto last accessed file in previous buffer
  L = "@gd<space>wl<space>b<tab><ret>" # Goto definition in existing vertical right split

  [keys.normal.space]
  J = [":clipboard-yank-join"]

    [keys.normal.space.t] # toggle opts
    C   = ":toggle search.smart-case"
    a.d = ":toggle auto-save.after-delay.enable"
    a.f = ":toggle auto-save.focus-lost"
    c   = ":toggle inline-diagnostics.cursor-line warning disable"
    e   = ":toggle end-of-line-diagnostics hint disable"
    f   = ":toggle auto-format"
    i   = ":toggle lsp.display-inlay-hints"
    o   = ":toggle inline-diagnostics.other-lines warning disable"
    s   = ":toggle lsp.auto-signature-help"
    w   = ":toggle soft-wrap.enable"
    x   = ":toggle whitespace.render all none"

    [keys.normal.space.c] # ccase
    T   = "@|ccase --to train<ret>"          # Train-Case
    a   = "@|ccase --to alternating<ret>"    # aLtErNaTiNg CaSe
    c   = "@|ccase --to camel<ret>"          # camelCase
    k   = "@|ccase --to kebab<ret>"          # kebab-case
    p   = "@|ccase --to pascal<ret>"         # PascalCase
    r   = "@|ccase --to random<ret>"         # rAnDOm caSe
    s   = "@|ccase --to snake<ret>"          # snake_case
    t   = "@|ccase --to title<ret>"          # Title Case
    u.C = "@|ccase --to cobol<ret>"          # COBOL-CASE
    u.S = "@|ccase --to screamingsnake<ret>" # SCREAMING_SNAKE_CASE
    u.U = "@|ccase --to upperflat<ret>"      # UPPERFLATCASE
    u.c = "@|ccase --to uppercamel<ret>"     # UpperCamelCase
    u.k = "@|ccase --to upperkebab<ret>"     # UPPER-KEBAB-CASE
    u.s = "@|ccase --to uppersnake<ret>"     # UPPER_SNAKE_CASE

    [keys.normal.space.m] # macros
    d   = "@ P:lang diff<ret>gg"                  # paste diff from clipboard
    e   = "@|sed '/^[[:space:]]*$/d'<ret>"        # remove empty lines
    i   = "@s[^\\x00-\\x7F]+<ret>"                # find non-ascii characters
    j   = "@s <ret>i<ret><esc>d"                  # split selection on white space
    t   = "@<A-!>date +%Y-%m-%dT%H:%M:%S%z<ret>;" # insert local datetime
    u   = "@|sed '/^$/d'<ret>|sort -u<ret>"       # sort buffer, unique lines + rm empty lines
    w.s = "@s\\s{2,}<ret>di <esc>"                # slurp whitespace
    w.t = "@|sed 's/ \\+ /\\t/g'<ret>"            # replace multiple whitespaces with tab
    # sort paragraph under cursor
    s = [
      "goto_line_end",
      "goto_prev_paragraph",
      "goto_last_line",
      "add_newline_below",
      "jump_backward",
      "goto_next_paragraph",
      "select_mode",
      "select_line_above",
      "split_selection_on_newline",
      ":sort",
      "collapse_selection",
      "normal_mode",
      "keep_primary_selection",
      "goto_line_start",
      "goto_last_line",
      "extend_to_line_bounds",
      "delete_selection",
      "jump_backward",
    ]

    [keys.normal.space.l]
    c = ":lsp-workspace-command"
    r = ":lsp-restart"
    s = ":lsp-stop"

[keys.insert]
"C-[" = "normal_mode"

[keys.select]
"C-[" = "normal_mode"
"C-j" = ["goto_next_paragraph"]
"C-k" = ["goto_prev_paragraph"]

  [keys.select.space]
  J = [":clipboard-yank-join"]
