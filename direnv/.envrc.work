#!/usr/bin/env bash

if has bw; then
  echo 'direnv: setting github cli credentials'
  if GH_TOKEN="$(bw get item '{{BW_ID_GH_TOKEN_W}}' | jq -r '.fields.[] | select(.name=="GH_TOKEN") | .value' 2>/dev/null)"; then
    export GH_TOKEN
  fi
else
  echo 'direnv: bw not found on path'
fi

if has gcloud; then
  echo 'direnv: setting gcloud config'
  export CLOUDSDK_ACTIVE_CONFIG_NAME="{{GCLOUD_CONFIG_NAME_W}}"
  export GCP_PROJECT="{{DEFAULT_GCP_PROJECT_W}}"
  export GOOGLE_CLOUD_QUOTA_PROJECT="{{DEFAULT_GCP_PROJECT_W}}"
  export GOOGLE_APPLICATION_CREDENTIALS="$CLOUDSDK_CONFIG/{{GCLOUD_APPLICATION_DEFAULT_CREDENTIALS_W}}"
  gcloud config set project "{{DEFAULT_GCP_PROJECT_W}}"

  # {{This comment will be replaced with specfic GCS/Compute engine resource names}}
else
  echo 'direnv: gcloud not found on path'
fi

if ! env | grep -q SSH_AUTH_SOCK; then 
  echo 'direnv: starting ssh agent..'
  eval "$(ssh-agent -s)"
  # If SSH_AUTH_SOCK is not a valid socket, re-run ssh-agent.
  ! test -S "$SSH_AUTH_SOCK" && unset SSH_AUTH_SOCK && eval "$(ssh-agent -s)"
fi

if has bw && test -f ~/.ssh/'{{ID_RSA_W}}'; then
  if ! ssh-add -l | grep -q '{{SSH_HOST_W}}'; then 
    echo 'direnv: adding ssh keys..'
    tmp_ssh_askpass="$(mktemp -p.)"
    # shellcheck disable=SC2064
    trap "rm -f $tmp_ssh_askpass" EXIT INT
	cat <<- EOF > "$tmp_ssh_askpass"
	echo "$(bw get password '{{BW_ID_SSH_PASSPHRASE_W}}')"
	EOF
    DISPLAY=1 SSH_ASKPASS="$tmp_ssh_askpass" ssh-add ~/.ssh/'{{ID_RSA_W}}' < /dev/null
  fi
fi

# confirm ssh keys added
ssh-add -l

# confirm username and email
echo "git config user.name = $(git config --get user.name)"
echo "git config user.email = $(git config --get user.email)"

env_vars_required \
  SSH_AUTH_SOCK \
  SSH_AGENT_PID \
  CLOUDSDK_ACTIVE_CONFIG_NAME \
  GCP_PROJECT \
  GOOGLE_CLOUD_QUOTA_PROJECT \
  GOOGLE_APPLICATION_CREDENTIALS \
  GH_TOKEN
