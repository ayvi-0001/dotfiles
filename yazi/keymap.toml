"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[input]
prepend_keymap = [{ on = "<Esc>", run = "close", desc = "Cancel input" }]

[manager]
prepend_keymap = [
  # start: copy
  #  Add the '--separator' option to builtin copy commands.
  { on = ["c", "c"], run = "copy --separator='unix' path", desc = "Copy the file path" },
  { on = ["c", "d"], run = "copy --separator='unix' dirname", desc = "Copy the directory path" },
  { on = ["c", "f"], run = "copy --separator='unix' filename", desc = "Copy the filename" },
  { on = ["c", "n"], run = "copy --separator='unix' name_without_ext", desc = "Copy the filename without extension" },
  #  start: path-from-root.yazi
  { on = ["c", "r"], run = "plugin path-from-root", desc = "Copies path from git root" },
  #  end: path-from-root.yazi
  # end: copy

  # start: goto
  { on = ["g", "C"], run = "cd ~/.cache", desc = "Goto ~/.cache" },
  { on = ["g", "e"], run = "arrow bot", desc = "Move cursor to the bottom" },
  { on = ["g", "a"], run = "cd a:/", desc = "Goto /a/" },
  #  start: git-cd-root-dir
  { on = ["g", "r"], run = "plugin git-cd-root-dir", desc = "Goto git root directory" },
  #  end: git-cd-root-dir
  #  start: follow-symlink.yazi
  { on = ["g", "l"], run = "plugin follow-symlink", desc = "Follow symlink" },
  #  end: follow-symlink.yazi
  # end: goto

  # start: relative-motions.yazi
  { on = ["1"], run = "plugin relative-motions -- 1", desc = "move in relative steps" },
  { on = ["2"], run = "plugin relative-motions -- 2", desc = "move in relative steps" },
  { on = ["3"], run = "plugin relative-motions -- 3", desc = "move in relative steps" },
  { on = ["4"], run = "plugin relative-motions -- 4", desc = "move in relative steps" },
  { on = ["5"], run = "plugin relative-motions -- 5", desc = "move in relative steps" },
  { on = ["6"], run = "plugin relative-motions -- 6", desc = "move in relative steps" },
  { on = ["7"], run = "plugin relative-motions -- 7", desc = "move in relative steps" },
  { on = ["8"], run = "plugin relative-motions -- 8", desc = "move in relative steps" },
  { on = ["9"], run = "plugin relative-motions -- 9", desc = "Move in relative steps" },
  # end: relative-motions.yazi

  # start: compress.yazi
  { on = ["c", "a"], run = "plugin compress", desc = "Archive selected files" },
  # end: compress.yazi

  # start: diff.yazi
  { on = "<C-d>", run = "plugin diff", desc = "Diff the selected with the hovered file" },
  # end: diff.yazi

  # start: what-size.yazi
  { on = [".", "s"], run = "plugin what-size", desc = "Calc size of selection or cwd" },
  # end: what-size.yazi

  # start: copy-file-contents.yazi
  { on = "<A-y>", run = "plugin copy-file-contents", desc = "Copy contents of file" },
  # end: copy-file-contents.yazi

  # start: arrow.yazi | parent-arrow.yazi
  { on = "k", run = "plugin arrow -- -1" },
  { on = "j", run = "plugin arrow -- 1" },
  { on = "K", run = "plugin parent-arrow -- -1" },
  { on = "J", run = "plugin parent-arrow -- 1" },
  # end: arrow.yazi | parent-arrow.yazi

  # start: shell
  { on = ["G"], run = """ shell --block -- bash -c "gitui -d." """, desc = "gitui" },
  { on = ["'", "d"], run = """ shell --block -- bash -c "git diff; echo Press enter to exit; read _;" """, desc = "git diff" },
  { on = ["'", "t"], run = """ shell --block -- bash -c "$EDITOR $(mktemp -up.)" """, desc = "write to tmpfile" },
  # end: shell

  # start: fg.yazi
  # NOTE `g` and `G` swapped from default (usually using ripgrep over fuzzy match)
  { on = ["f", "g"], run = "plugin fg -- rg", desc = "find file by content (ripgrep match)" },
  { on = ["f", "a"], run = "plugin fg -- rga", desc = "find file by content (ripgrep-all)" },
  { on = ["f", "G"], run = "plugin fg", desc = "find file by content (fuzzy match)" },
  { on = ["f", "f"], run = "plugin fg -- fzf", desc = "find file by filename" },
  # end: fg.yazi

  # start: projects.yazi
  { on = ["P", "s"], run = "plugin projects -- save", desc = "Save current project" },
  { on = ["P", "l"], run = "plugin projects -- load", desc = "Load project" },
  { on = ["P", "P"], run = "plugin projects -- load_last", desc = "Load last project" },
  { on = ["P", "d"], run = "plugin projects -- delete", desc = "Delete project" },
  { on = ["P", "D"], run = "plugin projects -- delete_all", desc = "Delete all projects" },
  { on = ["P", "m"], run = "plugin projects -- 'merge current'", desc = "Merge current tab to other projects" },
  { on = ["P", "M"], run = "plugin projects -- 'merge all'", desc = "Merge current project to other projects" },
  { on = ["q"], run = "plugin projects -- quit", desc = "Save last project and exit the process" },
  # end: projects.yazi

  # start: yamb.yazi
  { on = ["u", "a"], run = "plugin yamb -- save", desc = "Add bookmark" },
  { on = ["u", "g"], run = "plugin yamb -- jump_by_key", desc = "Jump bookmark by key" },
  { on = ["u", "G"], run = "plugin yamb -- jump_by_fzf", desc = "Jump bookmark by fzf" },
  { on = ["u", "d"], run = "plugin yamb -- delete_by_key", desc = "Delete bookmark by key" },
  { on = ["u", "D"], run = "plugin yamb -- delete_by_fzf", desc = "Delete bookmark by fzf" },
  { on = ["u", "A"], run = "plugin yamb -- delete_all", desc = "Delete all bookmarks" },
  { on = ["u", "r"], run = "plugin yamb -- rename_by_key", desc = "Rename bookmark by key" },
  { on = ["u", "R"], run = "plugin yamb -- rename_by_fzf", desc = "Rename bookmark by fzf" },
  # end: yamb.yazi

  # start: toggle-pane.yazi
  { on = "<C-1>", run = "plugin toggle-pane min-parent", desc = "Show or hide the parent pane" },
  { on = "<C-2>", run = "plugin toggle-pane min-current ", desc = "Show or hide the current pane" },
  { on = "<C-3>", run = "plugin toggle-pane min-preview", desc = "Show or hide the preview pane" },
  { on = "<A-1>", run = "plugin toggle-pane max-parent", desc = "Maximize or restore the parent pane" },
  { on = "<A-2>", run = "plugin toggle-pane max-current ", desc = "Maximize or restore the current pane" },
  { on = "<A-3>", run = "plugin toggle-pane max-preview", desc = "Maximize or restore the preview pane" },
  # end: toggle-pane.yazi
]
