"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[input]
prepend_keymap = [{ on = "<Esc>", run = "close", desc = "Cancel input" }]

[mgr]
prepend_keymap = [
  # start: copy
  # add the '--separator' option to builtin copy commands.
  { on = ["c", "c"], run = "copy --separator='unix' path", desc = "Copy the file path" },
  { on = ["c", "d"], run = "copy --separator='unix' dirname", desc = "Copy the directory path" },
  { on = ["c", "f"], run = "copy --separator='unix' filename", desc = "Copy the filename" },
  { on = ["c", "n"], run = "copy --separator='unix' name_without_ext", desc = "Copy the filename without extension" },
  #  start: path-from-root.yazi
  { on = ["c", "r"], run = "plugin path-from-root", desc = "Copies path from git root" },
  #  end: path-from-root.yazi
  # end: copy

  # start: linemode
  { on = ["m", "S"], run = ["sort size --reverse", "linemode size", "sort natural --reverse=no"], desc = "Linemode: size (recursive)" },
  # end: linemode

  # start: relative-motions.yazi
  { on = ["M"], run = "plugin relative-motions", desc = "Trigger a new relative motion" },
  # end: relative-motions.yazi

  # start: compress.yazi
  { on = ["c", "a"], run = "plugin compress", desc = "Archive selected files" },
  # end: compress.yazi

  # start: diff.yazi
  { on = "<C-d>", run = "plugin diff", desc = "Diff the selected with the hovered file" },
  # end: diff.yazi

  # start: what-size.yazi
  { on = [".", "s"], run = "plugin what-size", desc = "Calc size of selection or cwd" },
  # end: what-size.yazi

  # start: copy-file-contents.yazi
  { on = "<A-y>", run = "plugin copy-file-contents", desc = "Copy contents of file" },
  # end: copy-file-contents.yazi

  # start: parent-arrow.yazi
  { on = "K", run = "plugin parent-arrow -1" },
  { on = "J", run = "plugin parent-arrow 1" },
  # end: parent-arrow.yazi

  # start: shell
  { on = ["G"], run = """ shell --block -- bash -c "gitui -d." """, desc = "gitui" },
  { on = ["'", "d"], run = """ shell --block -- bash -c "git diff; echo Press enter to exit; read _;" """, desc = "git diff" },
  { on = ["'", "t"], run = """ shell --block -- bash -c "$EDITOR $(mktemp -up.)" """, desc = "write to tmpfile" },
  # end: shell

  # start: fg.yazi
  { on = ["f", "g"], run = "plugin fg -- rg", desc = "find file by content (ripgrep match)" },
  { on = ["f", "a"], run = "plugin fg -- rga", desc = "find file by content (ripgrep-all)" },
  { on = ["f", "f"], run = "plugin fg -- fzf", desc = "find file by filename" },
  # end: fg.yazi

  # start: projects.yazi
  { on = ["P", "s"], run = "plugin projects -- save", desc = "Save current project" },
  { on = ["P", "l"], run = "plugin projects -- load", desc = "Load project" },
  { on = ["P", "P"], run = "plugin projects -- load_last", desc = "Load last project" },
  { on = ["P", "d"], run = "plugin projects -- delete", desc = "Delete project" },
  { on = ["P", "D"], run = "plugin projects -- delete_all", desc = "Delete all projects" },
  { on = ["P", "m"], run = "plugin projects -- 'merge current'", desc = "Merge current tab to other projects" },
  { on = ["P", "M"], run = "plugin projects -- 'merge all'", desc = "Merge current project to other projects" },
  { on = ["q"], run = "plugin projects -- quit", desc = "Save last project and exit the process" },
  # end: projects.yazi

  # start: yamb.yazi
  { on = ["u", "a"], run = "plugin yamb -- save", desc = "Add bookmark" },
  { on = ["u", "g"], run = "plugin yamb -- jump_by_key", desc = "Jump bookmark by key" },
  { on = ["u", "G"], run = "plugin yamb -- jump_by_fzf", desc = "Jump bookmark by fzf" },
  { on = ["u", "d"], run = "plugin yamb -- delete_by_key", desc = "Delete bookmark by key" },
  { on = ["u", "D"], run = "plugin yamb -- delete_by_fzf", desc = "Delete bookmark by fzf" },
  { on = ["u", "A"], run = "plugin yamb -- delete_all", desc = "Delete all bookmarks" },
  { on = ["u", "r"], run = "plugin yamb -- rename_by_key", desc = "Rename bookmark by key" },
  { on = ["u", "R"], run = "plugin yamb -- rename_by_fzf", desc = "Rename bookmark by fzf" },
  # end: yamb.yazi

  # start: toggle-pane.yazi
  { on = "<C-1>", run = "plugin toggle-pane min-parent", desc = "Show or hide the parent pane" },
  { on = "<C-2>", run = "plugin toggle-pane min-current ", desc = "Show or hide the current pane" },
  { on = "<C-3>", run = "plugin toggle-pane min-preview", desc = "Show or hide the preview pane" },
  { on = "<A-1>", run = "plugin toggle-pane max-parent", desc = "Maximize or restore the parent pane" },
  { on = "<A-2>", run = "plugin toggle-pane max-current ", desc = "Maximize or restore the current pane" },
  { on = "<A-3>", run = "plugin toggle-pane max-preview", desc = "Maximize or restore the preview pane" },
  # end: toggle-pane.yazi

  # start: glow.yazi
  { on = ["<C-e>"], run = "seek 5" },
  { on = ["<C-y>"], run = "seek -5" },
  # end: glow.yazi

  # start: goto
  { on = ["g", "C"], run = "cd ~/.cache", desc = "Goto ~/.cache" },
  { on = ["g", "e"], run = "arrow bot", desc = "Move cursor to the bottom" },
  { on = ["g", "D"], run = "cd ~/Downloads", desc = "Goto Downloads" },
  #  start: git-cd-root-dir.yazi
  { on = ["g", "r"], run = "plugin git-cd-root-dir", desc = "Goto git root directory" },
  #  end: git-cd-root-dir.yazi
  #  start: goto-drives
  { on = ["g", "d", "a"], run = "cd a:", desc = "Goto /a/" },
  { on = ["g", "d", "b"], run = "cd b:", desc = "Goto /b/" },
  { on = ["g", "d", "c"], run = "cd c:", desc = "Goto /c/" },
  { on = ["g", "d", "d"], run = "cd d:", desc = "Goto /d/" },
  { on = ["g", "d", "e"], run = "cd e:", desc = "Goto /e/" },
  { on = ["g", "d", "f"], run = "cd f:", desc = "Goto /f/" },
  { on = ["g", "d", "g"], run = "cd g:", desc = "Goto /g/" },
  { on = ["g", "d", "h"], run = "cd h:", desc = "Goto /h/" },
  { on = ["g", "d", "i"], run = "cd i:", desc = "Goto /i/" },
  { on = ["g", "d", "j"], run = "cd j:", desc = "Goto /j/" },
  { on = ["g", "d", "k"], run = "cd k:", desc = "Goto /k/" },
  { on = ["g", "d", "l"], run = "cd l:", desc = "Goto /l/" },
  { on = ["g", "d", "m"], run = "cd m:", desc = "Goto /m/" },
  { on = ["g", "d", "n"], run = "cd n:", desc = "Goto /n/" },
  { on = ["g", "d", "o"], run = "cd o:", desc = "Goto /o/" },
  { on = ["g", "d", "p"], run = "cd p:", desc = "Goto /p/" },
  { on = ["g", "d", "q"], run = "cd q:", desc = "Goto /q/" },
  { on = ["g", "d", "r"], run = "cd r:", desc = "Goto /r/" },
  { on = ["g", "d", "s"], run = "cd s:", desc = "Goto /s/" },
  { on = ["g", "d", "t"], run = "cd t:", desc = "Goto /t/" },
  { on = ["g", "d", "u"], run = "cd u:", desc = "Goto /u/" },
  { on = ["g", "d", "v"], run = "cd v:", desc = "Goto /v/" },
  { on = ["g", "d", "w"], run = "cd w:", desc = "Goto /w/" },
  { on = ["g", "d", "x"], run = "cd x:", desc = "Goto /x/" },
  { on = ["g", "d", "y"], run = "cd y:", desc = "Goto /y/" },
  { on = ["g", "d", "z"], run = "cd z:", desc = "Goto /z/" },
  #  end: goto-drives
  # end: goto
]
