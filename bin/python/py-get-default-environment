#!/usr/bin/env python

import os
import platform
import sys
import typing as t
from contextlib import suppress

if t.TYPE_CHECKING:
    from sys import _ReleaseLevel, _version_info

with suppress(Exception):
    from rich import print


def format_full_version(info: "_version_info") -> str:
    version: str = "{0.major}.{0.minor}.{0.micro}".format(info)
    kind: "_ReleaseLevel" = info.releaselevel
    if kind != "final":
        version += kind[0] + str(info.serial)
    return version


def default_environment() -> dict[str, str]:
    return {
        "implementation_name": sys.implementation.name,
        "implementation_version": format_full_version(info=sys.implementation.version),
        "os_name": os.name,
        "platform_machine": platform.machine(),
        "platform_release": platform.release(),
        "platform_system": platform.system(),
        "platform_version": platform.version(),
        "python_full_version": platform.python_version(),
        "platform_python_implementation": platform.python_implementation(),
        "python_version": ".".join(platform.python_version_tuple()[:2]),
        "sys_platform": sys.platform,
    }


print(default_environment())
